{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file:///Users/lxc/Projects/aiagent/sweatshop_id_card/src/lib/auth.ts"],"sourcesContent":["import TwitterProvider from \"next-auth/providers/twitter\";\nimport type { NextAuthOptions } from \"next-auth\";\n\nexport const authOptions: NextAuthOptions = {\n  providers: [\n    TwitterProvider({\n      clientId: process.env.TWITTER_CLIENT_ID as string,\n      clientSecret: process.env.TWITTER_CLIENT_SECRET as string,\n      version: \"2.0\",\n      authorization: {\n        url: \"https://twitter.com/i/oauth2/authorize\",\n        params: {\n          scope: \"users.read tweet.read offline.access\",\n        },\n      },\n    }),\n  ],\n  callbacks: {\n    async jwt({ token, account, profile }) {\n      // Persist the OAuth access_token to the token right after signin\n      if (account) {\n        token.accessToken = account.access_token;\n        token.refreshToken = account.refresh_token;\n        token.tokenType = account.token_type;\n      }\n      return token;\n    },\n    async session({ session, token }) {\n      // Send properties to the client\n      session.accessToken = token.accessToken as string;\n      return session;\n    },\n  },\n  debug: process.env.NODE_ENV === \"development\",\n  pages: {\n    signIn: \"/\",\n    signOut: \"/\",\n    error: \"/\",\n  },\n}; "],"names":[],"mappings":";;;AAAA;;AAGO,MAAM,cAA+B;IAC1C,WAAW;QACT,CAAA,GAAA,sJAAA,CAAA,UAAe,AAAD,EAAE;YACd,UAAU,QAAQ,GAAG,CAAC,iBAAiB;YACvC,cAAc,QAAQ,GAAG,CAAC,qBAAqB;YAC/C,SAAS;YACT,eAAe;gBACb,KAAK;gBACL,QAAQ;oBACN,OAAO;gBACT;YACF;QACF;KACD;IACD,WAAW;QACT,MAAM,KAAI,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE;YACnC,iEAAiE;YACjE,IAAI,SAAS;gBACX,MAAM,WAAW,GAAG,QAAQ,YAAY;gBACxC,MAAM,YAAY,GAAG,QAAQ,aAAa;gBAC1C,MAAM,SAAS,GAAG,QAAQ,UAAU;YACtC;YACA,OAAO;QACT;QACA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,gCAAgC;YAChC,QAAQ,WAAW,GAAG,MAAM,WAAW;YACvC,OAAO;QACT;IACF;IACA,OAAO,oDAAyB;IAChC,OAAO;QACL,QAAQ;QACR,SAAS;QACT,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 188, "column": 0}, "map": {"version":3,"sources":["file:///Users/lxc/Projects/aiagent/sweatshop_id_card/src/app/api/auth/%5B...nextauth%5D/route.ts"],"sourcesContent":["import NextAuth from \"next-auth\";\nimport { authOptions } from \"@/lib/auth\";\n\nconst handler = NextAuth(authOptions);\n\nexport { handler as GET, handler as POST }; "],"names":[],"mappings":";;;;AAAA;AACA;;;AAEA,MAAM,UAAU,CAAA,GAAA,uIAAA,CAAA,UAAQ,AAAD,EAAE,oHAAA,CAAA,cAAW","debugId":null}}]
}